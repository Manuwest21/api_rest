on:
    push:
      branches:
        - dev6  # Changez en fonction de la branche que vous utilisez pour déployer
  
jobs:
  #   health-check-job:
  #         uses: django_continuous_integration.yaml
  #         secrets: inherit
    deploy:
      runs-on: ubuntu-latest
      env:
        AZURE_CONTAINER_REGISTRY: djangofinal.azurecr.io  # Nom de votre ACR
        AZURE_CONTAINER_NAME: api-ml-test
        RESOURCE_GROUP: RG_Devries1
        IMAGE_NAME: westmanu21/projet_api  # Nom de l'image Docker à pousser
        ACR_USERNAME: ${{ secrets.AZURE_ACR_USERNAME }}  # Nom d'utilisateur ACR
        ACR_PASSWORD: ${{ secrets.AZURE_ACR_PASSWORD }}  # Mot de passe ACR
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}  # Informations d'identification Azure
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
  
        - name: Log in to Azure Container Registry
          run: echo "${{ secrets.AZURE_ACR_PASSWORD }}" | docker login $AZURE_CONTAINER_REGISTRY -u "${{ secrets.AZURE_ACR_USERNAME }}" --password-stdin
  
        - name: Build Docker image
          run: docker build -t $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME .
  
        - name: Push Docker image to Azure Container Registry
          run: docker push $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME
  
        - name: Azure Login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
  
        - name: Remove existing Azure Container Instance if exists
          run: |
            if az container show --resource-group $RESOURCE_GROUP --name $AZURE_CONTAINER_NAME --output none; then
              echo "Instance exists, proceeding to delete..."
              az container delete --resource-group $RESOURCE_GROUP --name $AZURE_CONTAINER_NAME --yes
            else
              echo "Instance does not exist, skipping deletion..."
            fi
  
        - name: Wait for Azure Container Instance to be deleted
          run: |
            while az container show --resource-group $RESOURCE_GROUP --name $AZURE_CONTAINER_NAME --output none; do
              echo "Waiting for container to be deleted..."
              sleep 10
            done
  
        - name: Create new Azure Container Instance
          run: |
            az container create \
              --resource-group $RESOURCE_GROUP \
              --name $AZURE_CONTAINER_NAME \
              --image $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME \
              --cpu 1 \
              --memory 1 \
              --ports 8000 \
              --ip-address public \
              --restart-policy Always \
              --registry-username $ACR_USERNAME \
              --registry-password $ACR_PASSWORD